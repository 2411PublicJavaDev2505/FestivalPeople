<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
     <mapper namespace="com.fepeo.boot.review.model.mapper.ReviewMapper" > 
  		<resultMap type="Review" id="reviewResultMap">
  		<id property="reviewNo" column="REVIEW_NO"/>
  		<result property="reviewTitle" column="REVIEW_TITLE"/>
  		<result property="reviewContent" column="REVIEW_CONTENT"/>
  		<result property="reviewWriteTime" column="REVIEW_WRITE_TIME"/>
  		<result property="reviewCount" column="REVIEW_COUNT"/>
  		<result property="reviewYn" column="REVIEW_YN"/>
  		<result property="reviewFileName1" column="REVIEW_FILE_NAME1"/>
  		<result property="reviewFileRename1" column="REVIEW_FILE_RENAME1"/>
  		<result property="reviewFilePath1" column="REVIEW_FILE_PATH1"/>
  		<result property="reviewFileName2" column="REVIEW_FILE_NAME2"/>
  		<result property="reviewFileRename2" column="REVIEW_FILE_RENAME2"/>
  		<result property="reviewFilePath2" column="REVIEW_FILE_PATH2"/>
  		<result property="reviewFileName3" column="REVIEW_FILE_NAME3"/>
  		<result property="reviewFileRename3" column="REVIEW_FILE_RENAME3"/>
  		<result property="reviewFilePath3" column="REVIEW_FILE_PATH3"/>
  		
  		<!-- 아래코드 코드작성되면 주석풀기 -->
  		<collection property="commentList" 
  		 			select="selectCommentList" column="REVIEW_NO"
  		 									javaType="java.util.List"
  		 									ofType="ReviewComment"></collection>
  		<!-- 이미지 다중으로 다이렉트로 왔긴했지만 코드 작성해줌 4/18 09:22 -->
  		<!-- 조회코드 첫번째 작성하고 아래작성하기!! 작성법은 본실습계정 내용보고 참고!적고 다시 밑에 ~ -->
  		<collection property="imgList"
  					select="selectReviewImgByNo" column="REVIEW_NO"
  					javaType="java.util.List"
  					ofType="ImgAddRequest"></collection>
  		
  		</resultMap>
  		<!-- insert id만 적음! seleckey적용하기위해 추가함!에러나면 지우기!!15:50 -->
  		<!-- detail하면서 아래 추가해줬음!4/14 20:37 -->
  		<!-- ***N으로 된거 Y로 나중에 변경해주기??*** -->
  		<!-- 4/20 한번 바꿔봄!아래 안되면 다시 원복! -->
 		<select id="selectOneByNo" resultMap="reviewResultMap">
 			SELECT * FROM REVIEW WHERE REVIEW_NO = #{reviewNo} AND REVIEW_YN = 'N'
 		</select>
<!--  		<select id="selectOneByNo" resultMap="reviewResultMap"> -->
<!--  			SELECT A.REVIEW_NO, -->
<!-- 				A.REVIEW_TITLE, -->
<!-- 				A.REVIEW_WRITE_TIME, -->
<!-- 				A.REVIEW_COUNT, -->
<!-- 				B.MEMBER_NAME -->
<!-- 				FROM REVIEW A  -->
<!-- 				LEFT OUTER JOIN MEMBER B -->
<!-- 				ON A.MEMBER_NO = B.MEMBER_NO WHERE REVIEW_NO = #{reviewNo} AND REVIEW_YN = 'N' -->
<!--  		</select> -->
 			
 			<!-- 아래도 코드작성하면 주석풀기! *-->
 		<select id="selectCommentList" resultType="ReviewComment">
 			SELECT * FROM REVIEW_COMMENT WHERE REVIEW_NO = #{reviewNo} ORDER BY COMMENT_NO DESC
 		</select>
 		
<!--  		<select id="selectReviewList" resultMap="reviewResultMap"> -->
<!--  			SELECT * FROM REVIEW ORDER BY REVIEW_NO DESC -->
<!--  		</select> -->
			<select id="selectReviewList" resultMap="reviewResultMap">
				SELECT A.REVIEW_NO,
					A.REVIEW_TITLE,
					A.REVIEW_WRITE_TIME,
					A.REVIEW_COUNT,
					B.MEMBER_NAME
					FROM REVIEW A 
					LEFT OUTER JOIN MEMBER B
					ON A.MEMBER_NO = B.MEMBER_NO AND B.MEMBER_NAME = MEMBER_NAME
					WHERE REVIEW_YN='N' ORDER BY 1 DESC
			</select>
 		
 		
 		<insert id="insertReview" useGeneratedKeys="true">
	  		<selectKey order="BEFORE" resultType="_int" keyProperty="reviewNo">
	  			SELECT SEQ_REVIEW_NO.NEXTVAL FROM DUAL
	  		</selectKey>
  			INSERT INTO REVIEW VALUES(#{reviewNo},
  			#{reviewTitle},
  			#{reviewContent},
  			 DEFAULT,DEFAULT,DEFAULT,
  				NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,#{memberNo})
  		</insert>
  		
  		<select id="getTotalCount" resultType="_int">
			SELECT COUNT(*) FROM REVIEW WHERE REVIEW_YN = 'N' 
		</select>
		
		<!-- 이미지 업로드 조회 쿼리 작성먼저함4/1810:02 에러나면 바꿔줄것! 그리고 COLLECTION태그 적어줌!-->
		<select id="selectReviewImgByNo" resultType="ImgAddRequest">
			SELECT * FROM REVIEW WHERE REVIEW_NO = #{reviewNo}
		</select>
		
		<!-- 4/18 9:14분추가!값의수가 충분하지않아 전체 다시 넣고 확인!11:13 -->
		<!-- 	#{img.reviewTitle} REVIEW_TITLE,
							#{img.reviewContent} REVIEW_CONTENT,
							#{img.reviewWriteTime} REVIEW_WRITE_TIME,
							#{img.reviewCount} REVIEW_COUNT,
							#{img.reviewYn} REVIEW_YN, -->
		<update id="insertReviewFirstImage">
			UPDATE REVIEW SET REVIEW_FILE_NAME1 = #{reviewFileName},
			REVIEW_FILE_RENAME1 = #{reviewFileRename},
			REVIEW_FILE_PATH1 = #{reviewFilePath} 
			WHERE REVIEW_NO = #{reviewNo}
		</update>
		<update id="insertReviewSecondImage">
			UPDATE REVIEW SET REVIEW_FILE_NAME2 = #{reviewFileName},
			REVIEW_FILE_RENAME2 = #{reviewFileRename},
			REVIEW_FILE_PATH2 = #{reviewFilePath} 
			WHERE REVIEW_NO = #{reviewNo}
		</update>
		<update id="insertReviewThirdImage">
			UPDATE REVIEW SET REVIEW_FILE_NAME3 = #{reviewFileName},
			REVIEW_FILE_RENAME3 = #{reviewFileRename},
			REVIEW_FILE_PATH3 = #{reviewFilePath} 
			WHERE REVIEW_NO = #{reviewNo}
		</update>
		
		<!-- 게시물 삭제는 update n 해줌! 4/18 16:25 -->
		<!-- 주석처리하고 delete로 작성!안되면 다시살리기 -->
		<update  id="reviewDelete">
			UPDATE REVIEW SET REVIEW_YN = 'Y' WHERE REVIEW_NO = #{reviewNo}
		</update>
<!-- 			<delete id="reviewDelete"> -->
<!-- 				DELETE FROM REVIEW WHERE REVIEW_NO = #{reviewNo} -->
<!-- 			</delete> -->
		
		<!-- 조회수 -->
		<update id="reviewCount">
			UPDATE REVIEW SET REVIEW_COUNT = REVIEW_COUNT+1 WHERE REVIEW_NO=#{reviewNo}
		</update>
		
		<!-- 검색 -->
		
		<select id="searchListByKeyword" resultMap="reviewResultMap">
			SELECT * FROM REVIEW 
			<where>	
				<!-- 제목검색 -->
				<if test="searchCondition == 'review_title'" >
					REVIEW_TITLE LIKE '%' ||#{searchKeyword}||'%'
				</if>
				<!-- 내용검색 -->
				<if test="searchCondition == 'review_content'">
					REVIEW_CONTENT LIKE '%' ||#{searchKeyword}||'%'
				</if>
				<!-- 전체검색 -->
				<if test="searchCondition == 'all'">
					REVIEW_TITLE LIKE '%'||#{searchKeyword}||'%' OR
					REVIEW_CONTENT LIKE '%'||#{searchKeyword}||'%'
				</if>
				AND REVIEW_YN = 'N'
			</where>
			ORDER BY REVIEW_NO DESC
		</select>
		
		<select id="getTotalCountBySearch" resultType="_int">
			SELECT COUNT(*) FROM REVIEW 
			<where>
				<!-- 제목검색 -->
				<if test="searchCondition == 'review_title'" >
					REVIEW_TITLE LIKE '%' ||#{searchKeyword}||'%'
				</if>
				<!-- 내용검색 -->
				<if test="searchCondition == 'review_content'">
					REVIEW_CONTENT LIKE '%' ||#{searchKeyword}||'%'
				</if>
				<!-- 전체검색 -->
				<if test="searchCondition == 'all'">
					REVIEW_TITLE LIKE '%'||#{searchKeyword}||'%' OR
					REVIEW_CONTENT LIKE '%'||#{searchKeyword}||'%'
				</if>
				AND REVIEW_YN = 'N'
			</where>
		</select>
		
</mapper>